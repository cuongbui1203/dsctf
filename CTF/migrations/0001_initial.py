# Generated by Django 4.1.2 on 2022-10-13 08:05

import datetime
import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('text', models.TextField()),
                ('date', models.DateTimeField(default=datetime.datetime(2022, 10, 13, 15, 5, 46, 941805))),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('gameID', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('gameIP', models.CharField(max_length=50, unique=True)),
                ('gamePort', models.CharField(max_length=50, unique=True)),
                ('gameName', models.CharField(max_length=50, unique=True)),
                ('gameRule', models.TextField(blank=True)),
                ('gameSecretKey', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('teamID', models.AutoField(primary_key=True, serialize=False)),
                ('teamSecretKey', models.CharField(max_length=50, unique=True)),
                ('teamName', models.CharField(max_length=50, unique=True)),
                ('teamScore', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('username', models.CharField(max_length=50)),
                ('firstName', models.CharField(max_length=50)),
                ('lastName', models.CharField(max_length=30)),
                ('userScore', models.IntegerField(default=0)),
                ('date_joined', models.DateTimeField(default=datetime.datetime(2022, 10, 13, 15, 5, 46, 937930))),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
